name: Build ROM
on:
  workflow_dispatch:
    inputs:
      fresh_install:
        description: 'Do you want to clean everything and start fresh?. All git repos are updated automatically. Do not check this if a build has failed because of some error, just re run workflow without checking this. This will reduce build time significantly.'
        type: boolean
        required: false
        default: false
      clean_dir:
        description: 'Ignore this if you have set above fresh install. Specify directories to be removed with spaces (if a directory name contains space enlcose with ""). Warning! This runs (rm -rf <dirs>) command. Output directory is cleaned by default.'
        required: false
        type: string
        default: ''
  workflow_call:
    inputs:
      fresh_install:
        required: true
        type: boolean
      clean_dir:
        required: true
        type: string
    secrets:
      RELEASE_GITHUB_TOKEN:
        description: 'GitHub Token for Releases'
        required: true
      TG_TOKEN:
        description: 'Telegram Bot Token'
        required: true
      TG_CHAT:
        description: 'Telegram Chat ID'
        required: true

# queue up builds to prevent failures on progress of other builds
concurrency:
  group: building_rom
  cancel-in-progress: false

jobs:
  build:
    timeout-minutes: 2400
    runs-on: self-hosted
    environment: 
      name: Builder
    steps:

      - name: Checkout
        run: |
          rm -rf __rom-build_scripts__
          git_branch=$(echo ${{ github.ref }} | sed 's/refs\/heads\///')
          echo "Branch: $git_branch"
          git clone ${{ github.server_url }}/${{ github.repository }} __rom-build_scripts__ -b $git_branch --depth 1 --single-branch

      - name: Build
        run: |
          source __rom-build_scripts__/._env
          required_files=( _utils.sh _build.sh ._env $REPOS_JSON )
          rm -rf "${required_files[@]}"
          for file in "${required_files[@]}"; do
            if [ ! -f __rom-build_scripts__/$file ]; then
              echo "File $file not found!"
              exit 1
            fi
            cp -r __rom-build_scripts__/$file .
          done
          chmod +x _build.sh
          ./_build.sh
        env:
          RELEASE_GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT: ${{ secrets.TG_CHAT }}
          GITHUB_RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Logs
          path: |
            *.log
